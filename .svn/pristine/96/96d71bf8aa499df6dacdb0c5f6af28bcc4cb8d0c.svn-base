package com.astrolink.websiteCrack;

import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Random;

import net.sf.json.JSONObject;

import org.apache.commons.httpclient.Header;
import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.HttpStatus;
import org.apache.commons.httpclient.NameValuePair;
import org.apache.commons.httpclient.SimpleHttpConnectionManager;
import org.apache.commons.httpclient.methods.PostMethod;
import org.apache.commons.httpclient.methods.multipart.FilePart;
import org.apache.commons.httpclient.methods.multipart.MultipartRequestEntity;
import org.apache.commons.httpclient.methods.multipart.Part;
import org.apache.commons.httpclient.params.HttpClientParams;

import com.astrolink.util.tools.BasicsTools;
import com.astrolink.util.tools.JsonTools;
import com.astrolink.util.tools.PostNetWork_singleton;
import com.astrolink.util.tools.business.SSL.defaultSSL;

public class DmLogin {
	private static String charset = "utf-8";

	/**
	 * @param args
	 */
	public static void main(String[] args) {
	HttpClient httpclient = new HttpClient(new HttpClientParams(), new SimpleHttpConnectionManager(true));

		String loginInfo="";
		ArrayList<String> cookie = new ArrayList<String>();
		for(int i=0;i<3;i++){
			
			String execTime=BasicsTools.nDaysAfterOneDateString(BasicsTools.getForDate("yyyy-MM-dd"), -1).replaceAll("-", "");
			System.out.println(execTime);
			
			String loginUrl = "https://218.207.208.43:9083/bicp/login.action";//访问首页
			String refererUrl=loginUrl;
			String html0=post_doNetWork(loginUrl,null,cookie,"utf-8",null,httpclient);
			System.out.println(html0);
			String BMEWebToken=html0.substring(html0.indexOf("BMEWebToken="),html0.length());
			BMEWebToken=BMEWebToken.substring(0,BMEWebToken.indexOf("'"));
			System.out.println(BMEWebToken);
			
			String uuApi="-1";
			String uuid=BasicsTools.getUuid(false, 16, new Random());
			String configPath = "." + File.separator + "uuCode" + File.separator + uuid + ".jpg";
			String verifycodeurl = "https://218.207.208.43:9083/bicp/verifycode";//获取验证码
			InputStream code=post_doNetWorkIO(verifycodeurl,null,cookie,null,httpclient);
			String[] codeInfo=httpUuGetCode(configPath,code);
		
			if(codeInfo.length>1){
				uuApi=codeInfo[1];
				String authenticateUrl = "https://218.207.208.43:9083/bicp/authenticate.action";//登陆
				NameValuePair[] postData = { 
						new NameValuePair("username", "CP0457BICP"),
						new NameValuePair("password", "ww10086"),
						new NameValuePair("vcode", uuApi),
						new NameValuePair("dstInfo", "480:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0"),
						new NameValuePair("language", "zh_CN"),
						new NameValuePair("name", "default"),
						new NameValuePair("logintype", "0"),
						new NameValuePair("smscode", ""),
						new NameValuePair("msisdn", "CP2090BICP"),
				};
				loginInfo=post_doNetWork(authenticateUrl,postData,cookie,"utf-8",refererUrl,httpclient);
				refererUrl=authenticateUrl;
				System.out.println(loginInfo);
				JSONObject json=JsonTools.getJsonData(loginInfo);
				//{"isSuccess":true,"resultMsg":"","nextAction":""}
				//{"isSuccess":false,"resultMsg":"验证码错误。","nextAction":""}
				//{"isSuccess":true,"resultMsg":"","nextAction":"query.action?BMEBusiness=sys_usm_login_confirm"}
				if(json.optBoolean("isSuccess")==true ){
					String nextAction=json.optString("nextAction");
					String html="";
					//https://218.207.208.43:9083/bicp/query.action?BMEBusiness=sys_usm_login_confirm&BMETheme.name=blue2.0&language=zh_CN&BMEWebToken=_QsdaUe8JG-252150996
					//https://218.207.208.43:9083/bicp/usmLogConfirm.action?"+BMEWebToken+"&BMETheme.name=blue2.0&language=zh_CN	
					if(!nextAction.equals("")){
						String nextActionUrl = "https://218.207.208.43:9083/bicp/"+nextAction+"&"+BMEWebToken+"&BMETheme.name=blue2.0&language=zh_CN";
						System.out.println(nextActionUrl);
						html=post_doNetWork(nextActionUrl,null,cookie,"utf-8",refererUrl,httpclient);
						refererUrl=nextActionUrl;
						System.out.println(html);
					}else{
						String mainUrl = "https://218.207.208.43:9083/bicp/main.action?ssLogin=true&"+BMEWebToken+"&BMETheme.name=blue2.0&language=zh_CN";
						System.out.println(mainUrl);
						html=post_doNetWork(mainUrl,null,cookie,"utf-8",refererUrl,httpclient);
						refererUrl=mainUrl;
						System.out.println(html);
					}
					
					
					if(html.indexOf("要求的token是非法的")!=-1){
						System.out.println("token是非法"+html);
					}else if(html.indexOf("该帐号已登录或上一次登录未正常退出系统，继续登录则已登录的用户将被强制退出系统，是否继续？")!=-1){
						System.out.println("该帐号已登录"+html);
						String usmLogConfirmUrl = "https://218.207.208.43:9083/bicp/usmLogConfirm.action?BMETheme.name=blue2.0&language=zh_CN&"+BMEWebToken;
						System.out.println(usmLogConfirmUrl);
						html=post_doNetWork(usmLogConfirmUrl,null,cookie,"utf-8",refererUrl,httpclient);
						refererUrl=usmLogConfirmUrl;
					}else{
						System.out.println(html);
					}
					
					
					if(html.indexOf("资源管理器")!=-1){
						System.out.println("资源管理器"+html);
						String business="http://218.207.208.43:9080/bicp/business.action?BMEBusiness=resourceList&catalogId=/RMS/favourite&resourceType=&"+BMEWebToken+"&BMETimestamp=1466055077400";
						System.out.println(business);
						html=post_doNetWork(business,null,cookie,"utf-8",refererUrl,httpclient);
						refererUrl=business;
						System.out.println(html);
						
						
						String resourceId="";
						String resourceRefId="";
						String resourceType="";
						String []infs=html.split("</td></tr>");
						for(String info:infs){
							//在这里写分支收入还是投诉
							if(info.indexOf("title=\"29\"")!=-1){
								System.out.println(info);
								resourceId=subStr(info,"resourceId=\"","\"");
								resourceRefId=subStr(info,"resourceRefId=\"","\"");
								resourceType=subStr(info,"resourceType=\"","\"");
							}
						}
						System.out.println("resourceId："+resourceId);
						System.out.println("resourceRefId："+resourceRefId);
						System.out.println("resourceType："+resourceType);
						
						String checkInputIsDate="http://218.207.208.43:9080/isdp/adhocView.action?action=checkInputIsDate&"+BMEWebToken+"&resOprType=modify&pattern=yyyyMMdd&dateString="+execTime;
						System.out.println(checkInputIsDate);
						html=post_doNetWork(checkInputIsDate,null,cookie,"utf-8",refererUrl,httpclient);
						System.out.println(html);
						refererUrl=checkInputIsDate;
						
						checkInputIsDate="http://218.207.208.43:9080/isdp/adhocView.action?action=checkInputIsDate&"+BMEWebToken+"&resOprType=modify&pattern=yyyyMMdd&dateString="+execTime;
						System.out.println(checkInputIsDate);
						html=post_doNetWork(checkInputIsDate,null,cookie,"utf-8",refererUrl,httpclient);
						System.out.println(html);
						refererUrl=checkInputIsDate;
						
						
						String getQueryProgressWin="http://218.207.208.43:9080/isdp/adhocView.action?action=getQueryProgressWin&"+BMEWebToken;
						System.out.println(getQueryProgressWin);
						NameValuePair[] getQueryProgressWinPostData = { 	
								new NameValuePair("resOprType", "view"),
								new NameValuePair("dataQueried", "false"),
								new NameValuePair("id", resourceRefId),
								new NameValuePair("executeId", "null"),
								new NameValuePair("params", "[{\"paramName\":\"${输入开始日期}_10\",\"paramOperator\":\">=\",\"buildinType\":false,\"paramValue\":"+execTime+",\"paramTextValue\":\"\"},{\"paramName\":\"${输入结束日期}_11\",\"paramOperator\":\"<=\",\"buildinType\":false,\"paramValue\":"+execTime+",\"paramTextValue\":\"\"},{\"paramName\":\"${输入地市id}_12\",\"paramOperator\":\"in\",\"buildinType\":false,\"paramValue\":\"\",\"paramTextValue\":\"\"},{\"paramName\":\"${输入渠道名称}_14\",\"paramOperator\":\"like\",\"buildinType\":false,\"paramValue\":\"\",\"paramTextValue\":\"\"},{\"paramName\":\"${输入用户号码}_15\",\"paramOperator\":\"in\",\"buildinType\":false,\"paramValue\":\"\",\"paramTextValue\":\"\"},{\"paramName\":\"${输入工单类别}_16\",\"paramOperator\":\"=\",\"buildinType\":false,\"paramValue\":\"10010105240401\",\"paramTextValue\":\"不知情定制、取消或变更\"},{\"paramName\":\"${输入CP名称id}_21\",\"paramOperator\":\"=\",\"buildinType\":false,\"paramValue\":\"\",\"paramTextValue\":\"\"}]"),
								new NameValuePair("outputs", "[{\"fieldId\":\"8aae4d87478bff5d0147924028cc0661\",\"displayOrder\":0,\"fieldName\":\"投诉归档日期\",\"selected\":true},{\"fieldId\":\"8aae4d87478bff5d0147924028cc0666\",\"displayOrder\":1,\"fieldName\":\"用户号码\",\"selected\":true},{\"fieldId\":\"8aae4d87478bff5d0147924028cc0663\",\"displayOrder\":2,\"fieldName\":\"省份\",\"selected\":true},{\"fieldId\":\"8aae4d87478bff5d0147924028cc0665\",\"displayOrder\":3,\"fieldName\":\"地市\",\"selected\":true},{\"fieldId\":\"8aae4d87478bff5d0147924028cc0667\",\"displayOrder\":4,\"fieldName\":\"订购日期\",\"selected\":true},{\"fieldId\":\"8aae4d87478bff5d0147924028cc0669\",\"displayOrder\":5,\"fieldName\":\"订购业务名称\",\"selected\":true},{\"fieldId\":\"8aae4d87478bff5d0147924028cc066a\",\"displayOrder\":6,\"fieldName\":\"支付费用\",\"selected\":true},{\"fieldId\":\"8aae4d87478bff5d0147924028cc066c\",\"displayOrder\":7,\"fieldName\":\"渠道名称\",\"selected\":true},{\"fieldId\":\"8aae4d87478bff5d0147924028cc0673\",\"displayOrder\":8,\"fieldName\":\"子渠道名称\",\"selected\":true},{\"fieldId\":\"8aae4d87478bff5d0147924028cc066e\",\"displayOrder\":9,\"fieldName\":\"CP名称\",\"selected\":true},{\"fieldId\":\"8aae4d87515b5c5101519e4b81b57d68\",\"displayOrder\":10,\"fieldName\":\"渠道类型\",\"selected\":true},{\"fieldId\":\"8aae4d884c6d5698014c6dda35030589\",\"displayOrder\":11,\"fieldName\":\"应用ID\",\"selected\":true},{\"fieldId\":\"8aae4d884c6d5698014c6dda3503058a\",\"displayOrder\":12,\"fieldName\":\"应用名称\",\"selected\":true},{\"fieldId\":\"8aae4d87515b5c5101519e4b81b57d69\",\"displayOrder\":13,\"fieldName\":\"是否同质\",\"selected\":true}]"),
								new NameValuePair("statResultType", "null"),
								new NameValuePair("type", "before"),
								new NameValuePair("type", "before"),
								new NameValuePair("showRowNo", "true"),
								new NameValuePair("unqueryInfo", "false"),
								new NameValuePair("isRefresh", "1"),
								new NameValuePair("relatedeTable", "false"),
								new NameValuePair("pageInfo", "{\"curPageNo\":1,\"totalPageCount\":3,\"totalRowCount\":44,\"pageRowCount\":20}"),
								new NameValuePair("bgExportType", "null"),
								new NameValuePair("reverseTableName", "null"),
								new NameValuePair("id", resourceRefId),
						};
						html=post_doNetWork(getQueryProgressWin,getQueryProgressWinPostData,cookie,"utf-8",refererUrl,httpclient);
						System.out.println(html);
						refererUrl=getQueryProgressWin;
						String requeryUrl="http://218.207.208.43:9080/isdp/adhocView.action?action=requery&requeryKey=1466501157026&"+BMEWebToken;
						NameValuePair[] requeryPostData = { 	
							new NameValuePair("resOprType", "view"),
							new NameValuePair("dataQueried", "false"),
							new NameValuePair("id", resourceRefId),
							new NameValuePair("executeId", "null"),
							new NameValuePair("params", "[{\"paramName\":\"${输入开始日期}_10\",\"paramOperator\":\">=\",\"buildinType\":false,\"paramValue\":"+execTime+",\"paramTextValue\":\"\"},{\"paramName\":\"${输入结束日期}_11\",\"paramOperator\":\"<=\",\"buildinType\":false,\"paramValue\":"+execTime+",\"paramTextValue\":\"\"},{\"paramName\":\"${输入地市id}_12\",\"paramOperator\":\"in\",\"buildinType\":false,\"paramValue\":\"\",\"paramTextValue\":\"\"},{\"paramName\":\"${输入渠道名称}_14\",\"paramOperator\":\"like\",\"buildinType\":false,\"paramValue\":\"\",\"paramTextValue\":\"\"},{\"paramName\":\"${输入用户号码}_15\",\"paramOperator\":\"in\",\"buildinType\":false,\"paramValue\":\"\",\"paramTextValue\":\"\"},{\"paramName\":\"${输入工单类别}_16\",\"paramOperator\":\"=\",\"buildinType\":false,\"paramValue\":\"10010105240401\",\"paramTextValue\":\"不知情定制、取消或变更\"},{\"paramName\":\"${输入CP名称id}_21\",\"paramOperator\":\"=\",\"buildinType\":false,\"paramValue\":\"\",\"paramTextValue\":\"\"}]"),
							new NameValuePair("outputs", "[{\"fieldId\":\"8aae4d87478bff5d0147924028cc0661\",\"displayOrder\":0,\"fieldName\":\"投诉归档日期\",\"selected\":true},{\"fieldId\":\"8aae4d87478bff5d0147924028cc0666\",\"displayOrder\":1,\"fieldName\":\"用户号码\",\"selected\":true},{\"fieldId\":\"8aae4d87478bff5d0147924028cc0663\",\"displayOrder\":2,\"fieldName\":\"省份\",\"selected\":true},{\"fieldId\":\"8aae4d87478bff5d0147924028cc0665\",\"displayOrder\":3,\"fieldName\":\"地市\",\"selected\":true},{\"fieldId\":\"8aae4d87478bff5d0147924028cc0667\",\"displayOrder\":4,\"fieldName\":\"订购日期\",\"selected\":true},{\"fieldId\":\"8aae4d87478bff5d0147924028cc0669\",\"displayOrder\":5,\"fieldName\":\"订购业务名称\",\"selected\":true},{\"fieldId\":\"8aae4d87478bff5d0147924028cc066a\",\"displayOrder\":6,\"fieldName\":\"支付费用\",\"selected\":true},{\"fieldId\":\"8aae4d87478bff5d0147924028cc066c\",\"displayOrder\":7,\"fieldName\":\"渠道名称\",\"selected\":true},{\"fieldId\":\"8aae4d87478bff5d0147924028cc0673\",\"displayOrder\":8,\"fieldName\":\"子渠道名称\",\"selected\":true},{\"fieldId\":\"8aae4d87478bff5d0147924028cc066e\",\"displayOrder\":9,\"fieldName\":\"CP名称\",\"selected\":true},{\"fieldId\":\"8aae4d87515b5c5101519e4b81b57d68\",\"displayOrder\":10,\"fieldName\":\"渠道类型\",\"selected\":true},{\"fieldId\":\"8aae4d884c6d5698014c6dda35030589\",\"displayOrder\":11,\"fieldName\":\"应用ID\",\"selected\":true},{\"fieldId\":\"8aae4d884c6d5698014c6dda3503058a\",\"displayOrder\":12,\"fieldName\":\"应用名称\",\"selected\":true},{\"fieldId\":\"8aae4d87515b5c5101519e4b81b57d69\",\"displayOrder\":13,\"fieldName\":\"是否同质\",\"selected\":true}]"),
							new NameValuePair("statResultType", "null"),
							new NameValuePair("type", "before"),
							new NameValuePair("type", "before"),
							new NameValuePair("showRowNo", "true"),
							new NameValuePair("unqueryInfo", "false"),
							new NameValuePair("isRefresh", "1"),
							new NameValuePair("pageInfo", "{\"curPageNo\":1,\"totalPageCount\":3,\"totalRowCount\":44,\"pageRowCount\":20}"),
							new NameValuePair("relatedeTable", "false"),
							new NameValuePair("bgExportType", "null"),
							new NameValuePair("reverseTableName", "null"),
						};
						
						html=post_doNetWork(requeryUrl,requeryPostData,cookie,"utf-8",refererUrl,httpclient);
						System.out.println(html);
						//html = " $(function(){		adhoc.setExecuteId('8aae4d875553b3380155722e69547ade');    	adhoc.setTemplateId('b241daa34868421e948729980724db12');    	adhoc.setResourceId($(\"#resourceId\").val());    	    	controller.firstQuery();    	controller.initViewResultMenuitems();    	controller.initViewResultEvents();    });function getResultDivHeight(){	//取得ID = resultDiv的高度	var HeightRightDiv = $(\"#rightDiv\").height();	$(\"#resultDiv\").height(HeightRightDiv-32);	$(\"#eXtremeTableArea\").css('height', HeightRightDiv-60);}$(document).ready(getResultDivHeight);$(window).resize(getResultDivHeight);</script>";
						refererUrl=requeryUrl;
						
						String executeId=subStr(html,"adhoc.setExecuteId('","'");
						System.out.println("executeId："+executeId);
						
						
						String approveAuthorizedWinUrl="http://218.207.208.43:9080/isdp/adhocView.action?action=approveAuthorizedWin&"+BMEWebToken;
						System.out.println(getQueryProgressWin);
						NameValuePair[] approveAuthorizedWinData = { 	
								new NameValuePair("resOprType", "view"),
								new NameValuePair("dataQueried", "false"),
								new NameValuePair("id", resourceRefId),
								new NameValuePair("resourceType", resourceType),
								new NameValuePair("executeId", executeId),
								new NameValuePair("exportType", "xls"),
						};
						html=post_doNetWork(approveAuthorizedWinUrl,approveAuthorizedWinData,cookie,"utf-8",refererUrl,httpclient);
						System.out.println(html);
						refererUrl=approveAuthorizedWinUrl;
							
						
						String exportExcelWinUrl="http://218.207.208.43:9080/isdp/adhocView.action?action=exportExcel&"+BMEWebToken;
						System.out.println(exportExcelWinUrl);
						NameValuePair[] exportExcelData = { 	
								new NameValuePair("resOprType", "view"),
								new NameValuePair("dataQueried", "true"),
								new NameValuePair("id", resourceRefId),
								new NameValuePair("executeId", executeId),
								new NameValuePair("params", "[{\"paramName\":\"${输入开始日期}_10\",\"paramOperator\":\">=\",\"buildinType\":false,\"paramValue\":"+execTime+",\"paramTextValue\":\"\"},{\"paramName\":\"${输入结束日期}_11\",\"paramOperator\":\"<=\",\"buildinType\":false,\"paramValue\":"+execTime+",\"paramTextValue\":\"\"},{\"paramName\":\"${输入地市id}_12\",\"paramOperator\":\"in\",\"buildinType\":false,\"paramValue\":\"\",\"paramTextValue\":\"\"},{\"paramName\":\"${输入渠道名称}_14\",\"paramOperator\":\"like\",\"buildinType\":false,\"paramValue\":\"\",\"paramTextValue\":\"\"},{\"paramName\":\"${输入用户号码}_15\",\"paramOperator\":\"in\",\"buildinType\":false,\"paramValue\":\"\",\"paramTextValue\":\"\"},{\"paramName\":\"${输入工单类别}_16\",\"paramOperator\":\"=\",\"buildinType\":false,\"paramValue\":\"10010105240401\",\"paramTextValue\":\"不知情定制、取消或变更\"},{\"paramName\":\"${输入CP名称id}_21\",\"paramOperator\":\"=\",\"buildinType\":false,\"paramValue\":\"\",\"paramTextValue\":\"\"}]"),
							new NameValuePair("outputs", "[{\"fieldId\":\"8aae4d87478bff5d0147924028cc0661\",\"displayOrder\":0,\"fieldName\":\"投诉归档日期\",\"selected\":true},{\"fieldId\":\"8aae4d87478bff5d0147924028cc0666\",\"displayOrder\":1,\"fieldName\":\"用户号码\",\"selected\":true},{\"fieldId\":\"8aae4d87478bff5d0147924028cc0663\",\"displayOrder\":2,\"fieldName\":\"省份\",\"selected\":true},{\"fieldId\":\"8aae4d87478bff5d0147924028cc0665\",\"displayOrder\":3,\"fieldName\":\"地市\",\"selected\":true},{\"fieldId\":\"8aae4d87478bff5d0147924028cc0667\",\"displayOrder\":4,\"fieldName\":\"订购日期\",\"selected\":true},{\"fieldId\":\"8aae4d87478bff5d0147924028cc0669\",\"displayOrder\":5,\"fieldName\":\"订购业务名称\",\"selected\":true},{\"fieldId\":\"8aae4d87478bff5d0147924028cc066a\",\"displayOrder\":6,\"fieldName\":\"支付费用\",\"selected\":true},{\"fieldId\":\"8aae4d87478bff5d0147924028cc066c\",\"displayOrder\":7,\"fieldName\":\"渠道名称\",\"selected\":true},{\"fieldId\":\"8aae4d87478bff5d0147924028cc0673\",\"displayOrder\":8,\"fieldName\":\"子渠道名称\",\"selected\":true},{\"fieldId\":\"8aae4d87478bff5d0147924028cc066e\",\"displayOrder\":9,\"fieldName\":\"CP名称\",\"selected\":true},{\"fieldId\":\"8aae4d87515b5c5101519e4b81b57d68\",\"displayOrder\":10,\"fieldName\":\"渠道类型\",\"selected\":true},{\"fieldId\":\"8aae4d884c6d5698014c6dda35030589\",\"displayOrder\":11,\"fieldName\":\"应用ID\",\"selected\":true},{\"fieldId\":\"8aae4d884c6d5698014c6dda3503058a\",\"displayOrder\":12,\"fieldName\":\"应用名称\",\"selected\":true},{\"fieldId\":\"8aae4d87515b5c5101519e4b81b57d69\",\"displayOrder\":13,\"fieldName\":\"是否同质\",\"selected\":true}]"),
								new NameValuePair("statResultType", "null"),
								new NameValuePair("type", "before"),
								new NameValuePair("type", "before"),
								new NameValuePair("showRowNo", "true"),
								new NameValuePair("unqueryInfo", "false"),
								new NameValuePair("isRefresh", "1"),
								new NameValuePair("relatedeTable", "false"),
								new NameValuePair("pageInfo", "{\"curPageNo\":1,\"totalPageCount\":3,\"totalRowCount\":44,\"pageRowCount\":20}"),
								new NameValuePair("singleRowNo", "-1"),
								new NameValuePair("singleRowCount", "0"),
								new NameValuePair("bgExportType", "xls"),
								new NameValuePair("reverseTableName", "null"),
						};
						
						InputStream exelIo=post_doNetWorkIO(exportExcelWinUrl,exportExcelData,cookie,null,httpclient);
						System.out.println(html);
						refererUrl=approveAuthorizedWinUrl;
						// 存储图片

						String filePath = "." + File.separator + "uuCode" + File.separator + uuid + ".xls";
						File img = new File(filePath);
						try {
							if (!img.exists()) {
								img.createNewFile();
							}

							FileOutputStream fos = new FileOutputStream(filePath);
							byte[] b = new byte[1024];
							while((exelIo.read(b)) != -1){
								fos.write(b);
							}
							fos.close();
						} catch (Exception e) {
							e.printStackTrace();
						}

						System.out.println("文件名为:"+img.getName());
						//String urlUpload = "http://127.0.0.1:8080/spInfo/uploadComplaintAction_upload.action?dataSource=1";
						//turn = uploadFile(img,urlUpload,turn);
						break;
					}else{
						System.out.println(html);
					}
				}
			}
			String usmLogout = "http://218.207.208.43:9080/bicp/usmLogout.action?ssLogin=true&"+BMEWebToken+"&BMETheme.name=blue2.0&language=zh_CN";
			System.out.println(usmLogout);
			post_doNetWork(usmLogout,null,cookie,"utf-8",refererUrl,httpclient);
			System.out.println(i+"====================================================");
		}
	}
	/**
	 * 上传文件
	 * @param file
	 * @param url
	 */
	public static int uploadFile(File file, String url,int turn) {
        if (!file.exists()) {
            return turn;
        }
        PostMethod postMethod = new PostMethod(url);
        try {
            //FilePart：用来上传文件的类
        FilePart fp = new FilePart("fileName", file);
            Part[] parts = { fp };

            //对于MIME类型的请求，httpclient建议全用MulitPartRequestEntity进行包装
            MultipartRequestEntity mre = new MultipartRequestEntity(parts, postMethod.getParams());
            postMethod.setRequestEntity(mre);
            HttpClient client = new HttpClient();
            client.getHttpConnectionManager().getParams().setConnectionTimeout(50000);// 设置连接时间
            int status = client.executeMethod(postMethod);
            String result = postMethod.getResponseBodyAsString();
            System.out.println(status+"?"+HttpStatus.SC_OK);
            if (status == HttpStatus.SC_OK) {
            	if(result.indexOf("成功")==-1) {
            		turn = 3;
            		System.out.println(result);
            		return turn;
            	}
            } else {
                System.out.println("fail");
                System.out.println(result);
                if(result.indexOf("ToolsExcel")!=-1) {
                	return turn;
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            //释放连接
            postMethod.releaseConnection();
        }
		return turn;
	}
	
	public static String[] httpUuGetCode(String filePath, InputStream CheckCode) {
		// 存储图片

		File img = new File(filePath);

		try {
			if (!img.exists()) {
				img.createNewFile();
			}

			FileOutputStream fos = new FileOutputStream(filePath);
			byte[] b = new byte[1024];
			while((CheckCode.read(b)) != -1){
				fos.write(b);
			}
			fos.close();
		} catch (Exception e) {
			e.printStackTrace();
		}

		// 这里接打码平台
		return BasicsTools.httpUuGetCode(filePath);

	}

	private static String post_doNetWork(String netURL,NameValuePair[] postData,ArrayList<String> cookieList,String charsetName,String Referer,HttpClient httpclient) {
		PostNetWork_singleton postNetWork =null;
		String result = "";
		try {
			postNetWork=new PostNetWork_singleton(netURL);
			postNetWork.setHttpclient(httpclient);
			postNetWork.setSsl(defaultSSL.class);
			
			postNetWork.getPostMethod().addRequestHeader("Upgrade-Insecure-Requests","1");
			postNetWork.getPostMethod().addRequestHeader("Pragma", "no-cache");
			postNetWork.getPostMethod().addRequestHeader("User-Agent", "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.93 Safari/537.36");
			
			if(Referer!=null){
				postNetWork.getPostMethod().addRequestHeader("Referer", Referer);
			}

			String cookieStrInfo="";
			for(String cookie:cookieList){
				cookieStrInfo+=cookie+";";
			}
			
			if (!cookieStrInfo.equals("")) {
				//System.out.println("setCookie:"+cookieStrInfo);
				postNetWork.getPostMethod().addRequestHeader("Cookie", cookieStrInfo);
			}
			
			if(postData!=null){
				postNetWork.setPostData(postData);
			}
			
			postNetWork.executeMethod();
			result = postNetWork.getHtml(charsetName);
		 	
		 	
		 	String cookieStr=postNetWork.getCookie();
		 	String [] cookies=cookieStr.split(";");
		 	for(String cookie:cookies){
			 	boolean type=true;
		 		for(String cookieInfo:cookieList){
			 		if(cookie.equals(cookieInfo)){
			 			type=false;
			 			break;
			 		}
			 	}
			 	if(type)cookieList.add(cookie);
		 	}
		 	//System.out.println("getCookie:"+cookieList);
		 	
		 	int netState=postNetWork.getNetState();
		 	System.out.println(netState);
		 	if(netState==302){
		 		Header loca = postNetWork.getPostMethod().getResponseHeader("location");
		 	    String strLoca = loca.getValue(); 
		 	    System.out.println("location："+strLoca);
		 	    result=post_doNetWork(strLoca,null,cookieList,"utf-8",netURL,httpclient);
		 	}
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			postNetWork.closeConn();
		}
		return result;
	}
	
	private static InputStream post_doNetWorkIO(String netURL,NameValuePair[] postData,ArrayList<String> cookieList,String Referer,HttpClient httpclient) {
		PostNetWork_singleton postNetWork =null;
		InputStream result=null;
		try {
			postNetWork=new PostNetWork_singleton(netURL);
			postNetWork.setHttpclient(httpclient);
			postNetWork.setSsl(defaultSSL.class);
			
			postNetWork.getPostMethod().addRequestHeader("Upgrade-Insecure-Requests","1");
			postNetWork.getPostMethod().addRequestHeader("Pragma", "no-cache");
			postNetWork.getPostMethod().addRequestHeader("User-Agent", "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.93 Safari/537.36");
			
			if(Referer!=null){
				postNetWork.getPostMethod().addRequestHeader("Referer", Referer);
			}

			String cookieStrInfo="";
			for(String cookie:cookieList){
				cookieStrInfo+=cookie+";";
			}
			if (!cookieStrInfo.equals("")) {
				System.out.println("setCookie:"+cookieStrInfo);
				postNetWork.getPostMethod().addRequestHeader("Cookie", cookieStrInfo);
			}
			
			if(postData!=null){
				postNetWork.setPostData(postData);
			}
			
			
			postNetWork.executeMethod();
		 	result = postNetWork.getInputStream();
			
			String cookieStr=postNetWork.getCookie();
		 	String [] cookies=cookieStr.split(";");
		 	for(String cookie:cookies){
			 	boolean type=true;
		 		for(String cookieInfo:cookieList){
			 		if(cookie.equals(cookieInfo)){
			 			type=false;
			 			break;
			 		}
			 	}
			 	if(type)cookieList.add(cookie);
		 	}
		 	System.out.println("getCookie:"+cookieList);
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			postNetWork.closeConn();
		}
		return result;
	}
	
	private static String subStr(String val,String key,String endFh){
		String info=val.substring(val.indexOf(key)+key.length(),val.length());
		info=info.substring(0,info.indexOf(endFh));
		return info;
	}
}
